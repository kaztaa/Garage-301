@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var currentUser = await UserManager.GetUserAsync(User);  // Hämta den inloggade användaren
    string fullName = "Guest";  // Standardvärde för om ingen användare är inloggad

    if (currentUser != null)
    {
        // Kolla om användaren har en egenskap som heter FullName (kan vara en custom property på ApplicationUser)
        fullName = currentUser.FullName ?? currentUser.UserName;  // Om FullName finns använd det, annars använd UserName
    }
}

<ul class="navbar-nav ml-auto flex items-center">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item mr-4">
            <!-- Changed to a non-clickable span -->
            <span class="nav-link text-dark">Hello @fullName!</span>
        </li>
        <!-- Profile Icon -->
        <li class="nav-item mr-4">
            <img src="https://cdn2.vectorstock.com/i/1000x1000/17/61/male-avatar-profile-picture-vector-10211761.jpg" alt="Profile" class="w-8 h-8 rounded-full border-2 border-gray-300">
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-red-600 hover:text-red-800 border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item mr-4">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>


